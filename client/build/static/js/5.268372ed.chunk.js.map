{"version":3,"sources":["components/Errormsgs.js","components/StyleComponents/StyleComponent.js","components/Form.js","components/Reminderdetails.js","components/Form1.js"],"names":["Alert","props","elevation","variant","Errormsgs","errors","msgs","Object","keys","map","key","idx","severity","style","marginTop","memo","FormStyles","makeStyles","theme","root","margin","spacing","textField","marginLeft","marginRight","width","paper","padding","textAlign","color","palette","text","secondary","Form","formErrors","values","handleInputChange","addReminder","classes","className","autoComplete","Grid","container","direction","justify","alignItems","item","xs","TextField","id","type","label","onChange","value","slatitude","slongitude","dlatitude","dlongitude","email","time","InputLabelProps","shrink","inputProps","step","Button","onClick","size","Reminderdetails","reminderDetails","details","ele","console","log","msg","SnackbarContent","message","borderRadius","backgroundColor","fontFamily","fontSize","length","Form1","useState","setValues","setFormErrors","setreminderDetails","validate","a","trim","isLatLong","source","destination","isEmail","sendReminderData","Axios","get","res","data","rows","elements","status","gettime","split","hrs","parseInt","mins","durationinsecs","duration","moment","dhours","_data","hours","dmins","minutes","m","set","hour","minute","subtract","t1","t2","post","e","error","Error","alert","preventDefault","result","target","require","config"],"mappings":"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","file":"static/js/5.268372ed.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={4} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Errormsgs(props) {\r\n  const { errors } = props;\r\n  var msgs = Object.keys(errors).map(function (key, idx) {\r\n    return (\r\n      <Alert severity=\"warning\" style={{ marginTop: \"8px\" }} key={idx}>\r\n        {errors[key]}\r\n      </Alert>\r\n    );\r\n  });\r\n  return <div>{msgs}</div>;\r\n}\r\nexport default memo(Errormsgs);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nconst FormStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"25ch\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nexport default FormStyles;\r\n","import React from \"react\";\r\nimport Errormsgs from \"./Errormsgs\";\r\nimport FormStyles from \"./StyleComponents/StyleComponent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Form(props) {\r\n  const { formErrors, values, handleInputChange, addReminder } = props;\r\n  const classes = FormStyles();\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <Errormsgs errors={formErrors} />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n      >\r\n        <h1>It's time to leave !</h1>\r\n        <Grid item xs={12} className={classes.paper}>\r\n          <TextField\r\n            id=\"slatitude\"\r\n            type=\"text\"\r\n            label=\"source Lat\"\r\n            onChange={handleInputChange}\r\n            value={values.slatitude}\r\n            style={{ margin: \"10px\" }}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"slongitude\"\r\n            type=\"text\"\r\n            label=\"source Long\"\r\n            onChange={handleInputChange}\r\n            value={values.slongitude}\r\n            style={{ margin: \"10px\" }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.paper}>\r\n          <TextField\r\n            id=\"dlatitude\"\r\n            type=\"text\"\r\n            label=\"Destination Lat\"\r\n            onChange={handleInputChange}\r\n            value={values.dlatitude}\r\n            style={{ margin: \"10px\" }}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"dlongitude\"\r\n            type=\"text\"\r\n            label=\"Destination Long\"\r\n            onChange={handleInputChange}\r\n            value={values.dlongitude}\r\n            style={{ margin: \"10px\" }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.paper}>\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            onChange={handleInputChange}\r\n            style={{ margin: \"10px\" }}\r\n            value={values.email}\r\n          />\r\n          <TextField\r\n            id=\"time\"\r\n            label=\"Time\"\r\n            type=\"time\"\r\n            variant=\"outlined\"\r\n            onChange={handleInputChange}\r\n            value={values.time}\r\n            className={classes.textField}\r\n            style={{ margin: \"10px\" }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              step: 300, // 5 min\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.paper}>\r\n          <Button\r\n            onClick={addReminder}\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n          >\r\n            Remind Me\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { memo } from \"react\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\n\r\nfunction Reminderdetails(props) {\r\n  const { reminderDetails } = props;\r\n  const details = reminderDetails.map((ele, idx) => {\r\n    console.log(ele);\r\n    let msg = `[${ele.time}] - Requested MAP API for (${ele.email})`;\r\n    return (\r\n      <SnackbarContent\r\n        key={idx}\r\n        message={msg}\r\n        style={{\r\n          margin: \"10px\",\r\n          padding: \"15px\",\r\n          borderRadius: \"20px\",\r\n          backgroundColor: \"#1DB954\",\r\n          fontFamily: \"'Josefin Sans', sans-serif\",\r\n          fontSize: \"17px\",\r\n        }}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"Details\">\r\n      {reminderDetails.length ? <h1>REMINDER DETAILS:</h1> : \"\"}\r\n      {details}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Reminderdetails);\r\n","import React, { useState } from \"react\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport isLatLong from \"validator/lib/isLatLong\";\r\nimport trim from \"validator/lib/trim\";\r\nimport Axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Form from \"./Form\";\r\nimport Reminderdetails from \"./Reminderdetails\";\r\nrequire(\"dotenv\").config();\r\n\r\nexport default function Form1() {\r\n  const [values, setValues] = useState({\r\n    slatitude: \"\",\r\n    slongitude: \"\",\r\n    dlatitude: \"\",\r\n    dlongitude: \"\",\r\n    email: \"\",\r\n    time: \"00:00\",\r\n  });\r\n  // const initialstate = {\r\n  //   slatitude: \"\",\r\n  //   slongitude: \"\",\r\n  //   dlatitude: \"\",\r\n  //   dlongitude: \"\",\r\n  //   email: \"\",\r\n  //   time: \"00:00\",\r\n  // };\r\n  const KEY = \"AIzaSyAW8v9wOOvEviACg4YbowQEQn0SLplfOJM\";\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [reminderDetails, setreminderDetails] = useState([]);\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setValues({ ...values, [id]: value });\r\n  };\r\n\r\n  const validate = async () => {\r\n    let { slatitude, slongitude, dlatitude, dlongitude, email } = values;\r\n    console.log(slatitude);\r\n    slatitude = trim(slatitude);\r\n    slongitude = trim(slongitude);\r\n    dlatitude = trim(dlatitude);\r\n    dlongitude = trim(dlongitude);\r\n    let errors = {};\r\n    if (!isLatLong(`${slatitude}, ${slongitude}`)) {\r\n      errors.source = \"Please enter valid source lat and long\";\r\n    }\r\n    if (!isLatLong(`${dlatitude}, ${dlongitude}`)) {\r\n      errors.destination = \"Please enter valid destination lat and long\";\r\n    }\r\n    if (!isEmail(email)) {\r\n      errors.email = \"Please enter a valid Email Address\";\r\n    }\r\n    return errors;\r\n  };\r\n  const sendReminderData = async () => {\r\n    const {\r\n      slatitude,\r\n      slongitude,\r\n      dlatitude,\r\n      dlongitude,\r\n      email,\r\n      time,\r\n    } = values;\r\n    // setValues(initialstate);\r\n    try {\r\n      const res = await Axios.get(\r\n        `/maps/api/distancematrix/json?units=imperial&origins=${slatitude},${slongitude}&destinations=${dlatitude},${dlongitude}&key=${KEY}`\r\n      );\r\n      const { data } = await res;\r\n      const { status } = data.rows[0].elements[0];\r\n      if (status === \"OK\") {\r\n        let gettime = time.split(\":\");\r\n        let hrs = parseInt(gettime[0]);\r\n        let mins = parseInt(gettime[1]);\r\n        let durationinsecs = data.rows[0].elements[0].duration.value;\r\n        let duration = moment.duration(durationinsecs, \"seconds\");\r\n        let dhours = duration._data.hours;\r\n        let dmins = duration._data.minutes;\r\n        const m = moment()\r\n          .set({\r\n            hour: hrs,\r\n            minute: mins,\r\n          })\r\n          .subtract({\r\n            hours: dhours,\r\n            minutes: dmins,\r\n          });\r\n        let t1 = m.hour();\r\n        let t2 = m.minutes();\r\n        try {\r\n          Axios.post(\"http://localhost:5000/api/add\", {\r\n            email,\r\n            t1,\r\n            t2,\r\n          });\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      } else {\r\n        throw new Error(\"This destination is out of bounds\");\r\n      }\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n  const addReminder = async (e) => {\r\n    e.preventDefault();\r\n    let data = await validate();\r\n    if (Object.keys(data).length === 0) {\r\n      setreminderDetails((result) => [...result, [values.time, values.email]]);\r\n      setFormErrors({});\r\n      sendReminderData();\r\n    } else {\r\n      setFormErrors(data);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Container\">\r\n      <Form\r\n        formErrors={formErrors}\r\n        values={values}\r\n        handleInputChange={handleInputChange}\r\n        addReminder={addReminder}\r\n      />\r\n      <Reminderdetails reminderDetails={reminderDetails} />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}